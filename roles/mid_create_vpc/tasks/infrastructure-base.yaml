  - debug: msg="{{ generic_vpc }}"
  - debug: msg="{{ generic_vpc.security_groups.rules }}"
  - debug: msg="{{ pub_ip }}"
  
  - set_fact: 
      my_pub_ip_SG_rule:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: "{{ pub_ip.ansible_facts.ipify_public_ip }}/32"
  
  - debug: msg="{{ my_pub_ip_SG_rule }}"
  - set_fact: 
        security_groups_whatismyip:
          rules: "{{ generic_vpc.security_groups.rules + my_pub_ip_SG_rule }}"
  - debug: msg="{{ security_groups_whatismyip }}"
  - debug: msg="{{ generic_vpc }}"

  - name: Check szkolenie VPC existence
    ec2_vpc_net:
        cidr_block: "{{ generic_vpc.vpc.cidr_block }}"
        region: "{{region}}"
        #internet_gateway: True
        name:  "{{ generic_vpc.vpc.name }}"
        #subnets:
        #      "{{ generic_vpc.vpc.subnets }}"
        #wait: yes
    when: vpc_id is not defined
    register: vpc

  - name: Subnet
    ec2_vpc_subnet:
      vpc_id: "{{ vpc.vpc.id }}"
      cidr: "{{ generic_vpc.vpc.subnets[0].cidr }}"
      region: "{{region}}"
      tags: "{{ generic_vpc.vpc.subnets[0].resource_tags }}"
    register: subnet_out

  - name: Create igw 
    ec2_vpc_igw:
      region: "{{ region }}"
      vpc_id: "{{ vpc.vpc.id }}"
      state: present
      validate_certs: no
    register: igw 

  - name: Lookup route tables
    ec2_vpc_route_table_facts:
      region: "{{ region }}"
      filters:
        vpc-id: "{{ vpc.vpc.id }}"
    register: vpc_route_tables
  
  - name: Setup route tables
    ec2_vpc_route_table:
      region: "{{ region }}"
      vpc_id: "{{ vpc.vpc.id }}"
      lookup: id
      purge_subnets: false
      route_table_id: "{{ vpc_route_tables.route_tables[0].id }}"
      subnets: "{{ subnet_out.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"

  - name: Create akademiaansible {{env_name}} security group
    local_action:
        module: ec2_group
        name: "{{ generic_vpc.security_groups.name }}"
        description: "{{ generic_vpc.security_groups.description }}"
        vpc_id: "{{ vpc_id |default(vpc.vpc.id) }}"
        region: "{{ region }}"
        rules:
            "{{ security_groups_whatismyip.rules }}"
