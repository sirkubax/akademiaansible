- hosts: naszaaplikacja

  become: true

  #zmienne przydatne do parametryzacji wgrania, oraz szablonowania konfiguracji
  vars:
    katalog_glowny: /var/www/szkolenie.pl
    katalog_aplikacji: "{{ katalog_glowny }}/aplikacja"
    log_dir: "{{ katalog_glowny }}/logs"
    port: 5081
    pozwol_na_restart: false

  pre_tasks: []

  tasks:
    - name: 'zainstaluj aplikacje apache2 i libapache2-mod-wsgi-py3 przekazując listę'
      apt: 
        pkg:
          - apache2
          - libapache2-mod-wsgi-py3 
          - python-dev
      become: true

      # apt-get install apache2 libapache2-mod-wsgi-py3 python-dev

    - name: 'Opcjonalnie zainstaluj aplikacje apache2 i pozostale pakiety przy pomocy with_items'
      apt:
        pkg: "{{ item }}"
      loop:
        - apache2
        - libapache2-mod-wsgi-py3 
        - python-dev

      # apt-get install apache2
      # apt-get install libapache2-mod-wsgi-py3
      # apt-get install python-dev

    #- name: wypisz na ekran
    #  shell: echo "{{ item }}" # i zainstaluj cos niezbednego co potem bedzie potrzebne
    #  loop:
    #   - pierwszy
    #   - drugi
    #   - trzeci


#    ## wgrywamy do katalogu katalog_glowny
#    # dest: "{{ katalog_glowny }}"
    - name: 'klonuj repozytorium aplikacji'
      git:
        repo: https://github.com/sirkubax/naszaaplikacja.git
        dest: "{{ katalog_glowny }}"
      tags:
        - klonuj
        - git_repo

    - name: 'wgraj definicje virtualhost naszaaplikacja.apache.conf jako template'
      template:
        src: naszaaplikacja.apache.conf
        dest: /etc/apache2/sites-available/
      tags:
        - template
      register: wynik_apache_conf
      notify:
        - 'restart apache'
        #- 'jakies inne zadanie'

    - name: 'Wgraj sparametryzowany naszaaplikacja.wsgi (jako template)'
      template:
        src: naszaaplikacja.wsgi
        dest: "{{ katalog_aplikacji }}"
      tags:
        - template
      register: wynik_apache_wsgi
      notify:
        - 'restart apache'

    - name: 'wlacz virtualhost'
      shell: a2ensite naszaaplikacja.apache.conf
      args:
        creates: /etc/apache2/sites-enabled/naszaaplikacja.apache.conf
      tags:
        - vhost
      register: wynik_apache_vhost
      notify:
        - 'restart apache'
        - 'sprawdz czy apache dziala 80'
        - 'sprawdz czy apache dziala 5081'

    - name: 'konfiguruj apache do nasluchiwania na wybranym porcie'
      ansible.builtin.lineinfile:
        path: /etc/apache2/ports.conf
        regexp: '^Listen {{ port }}'
        line: "Listen {{ port }}"
        #insertafter: '^#Listen '
      register: wynik_apache_ports

    - name: 'zainicjalizuj virtualenv i zainstaluj zaleznosci' 
      ansible.builtin.pip:
        requirements: "{{ katalog_aplikacji }}/requirements.txt"
        virtualenv: "{{ katalog_aplikacji }}/venv"
      tags:
        - venv

    - name: stworz katalog na logi
      file: 
        dest: "{{ log_dir }}"
        state: directory
        owner: www-data
        group: www-data
      notify:
        - 'restart apache'

    - name: wypisz na ekran
      debug:
        #msg: "{{ wynik_apache_conf }}"
        var: wynik_apache_conf


  handlers:

    - name: 'restart apache'
      service:
        name: apache2
        state: restarted
        enabled: true 
      #tags:
      #  - restart
      #when:
      #  - "{{ pozwol_na_restart }}"  #AND
      #  - wynik_apache_conf.changed or wynik_apache_wsgi.changed or wynik_apache_port.changed 
      notify:
        - 'sprawdz czy apache dziala 80'
        - 'sprawdz czy apache dziala 5081'

    - name: sprawdz czy apache dziala 80
      wait_for:
        port: 80

    - name: sprawdz czy apache dziala 5081
      wait_for:
        port: "{{ port }}"



